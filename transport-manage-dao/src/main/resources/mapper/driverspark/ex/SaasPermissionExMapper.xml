<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sq.transportmanage.gateway.dao.mapper.driverspark.ex.SaasPermissionExMapper" >
  <resultMap id="BaseResultMap" type="com.sq.transportmanage.gateway.dao.entity.driverspark.SaasPermission" >
    <id column="permission_id" property="permissionId" jdbcType="INTEGER" />
    <result column="parent_permission_id" property="parentPermissionId" jdbcType="INTEGER" />
    <result column="permission_code" property="permissionCode" jdbcType="VARCHAR" />
    <result column="permission_type" property="permissionType" jdbcType="TINYINT" />
    <result column="permission_name" property="permissionName" jdbcType="VARCHAR" />
    <result column="menu_url" property="menuUrl" jdbcType="VARCHAR" />
    <result column="menu_open_mode" property="menuOpenMode" jdbcType="TINYINT" />
    <result column="valid" property="valid" jdbcType="BIT" />
    <result column="sort_seq" property="sortSeq" jdbcType="INTEGER" />
    <result column="merchant_id" property="merchantId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    permission_id, parent_permission_id, permission_code, permission_type, permission_name, 
    menu_url, menu_open_mode, valid, sort_seq,merchant_id, create_time, update_time
  </sql>
  
  <!-- 查询父权限下所有子权限的最大排序序号 -->
  <select id="selectMaxSortSeq" resultType="java.lang.Integer">
	  select IFNULL(MAX(sort_seq),0) from auth_saas_permission where parent_permission_id = #{parentId}
  </select>
  
  <!-- 根据权限ID、父权限ID、权限代码、权限类型、权限名称、状态进行查询 -->
  <select id="queryPermissions" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from auth_saas_permission
    where 1=1
    <if test="permissionIds !=null and permissionIds.size()>0">
    and permission_id in 
    <foreach collection="permissionIds" open="(" close=")" separator="," item="pid">
	    #{pid}
    </foreach>
    </if>
    <if test="parentId!=null">
    and parent_permission_id = #{parentId}
    </if>
    <if test="permissionCode!=null">
    and permission_code = #{permissionCode}
    </if>
    <if test="permissionTypes!=null and permissionTypes.size()>0">
    and permission_type in 
    <foreach collection="permissionTypes" open="(" close=")" separator="," item="type">
	    #{type}
    </foreach>
    </if>
    <if test="permissionName!=null">
    and permission_name like #{permissionName}
    </if>
    <if test="valid!=null">
    and valid = #{valid}
    </if>
    order by sort_seq , permission_id
  </select>
  
  <!-- 根据用户ID，查询其拥有的所有有效的权限ID -->
  <select id="queryPermissionIdsOfUser" resultType="java.lang.Integer">
		select DISTINCT p.permission_id 
		from auth_saas_permission p,auth_saas_role_permission_ralation rp, auth_saas_role r, auth_saas_user_role_ralation ur
		where p.permission_id=rp.permission_id and rp.role_id=r.role_id and r.role_id=ur.role_id
		and p.valid=1 and r.valid=1 and ur.user_id=#{userId}
  </select>
  <!-- 根据用户ID，查询其拥有的所有有效的权限代码 -->
  <select id="queryPermissionCodesOfUser" resultType="java.lang.String">
		select DISTINCT p.permission_code 
		from auth_saas_permission p,auth_saas_role_permission_ralation rp, auth_saas_role r, auth_saas_user_role_ralation ur
		where p.permission_id=rp.permission_id and rp.role_id=r.role_id and r.role_id=ur.role_id
		and p.valid=1 and r.valid=1 and ur.user_id=#{userId}
  </select>

  <!-- 根据用户ID，查询其拥有的所有有效的权限菜单 -->
  <select id="queryPermissionMenussOfUser" resultType="java.lang.String">
    select DISTINCT p.menu_url
    from auth_saas_permission p,auth_saas_role_permission_ralation rp, auth_saas_role r, auth_saas_user_role_ralation ur
    where p.permission_id=rp.permission_id and rp.role_id=r.role_id and r.role_id=ur.role_id
    and p.valid=1 and p.menu_url != ''  and r.valid=1 and  ur.user_id=#{userId}
  </select>

  <!--查询模块权限 -->
  <select id="queryModularPermissions" resultMap="BaseResultMap" >
  select  permission_id,permission_name
  from auth_saas_permission
    where parent_permission_id = 0
    <if test="permissionIds !=null and permissionIds.size()>0">
    and permission_id in
    <foreach collection="permissionIds" open="(" close=")" separator="," item="pid">
      #{pid}
    </foreach>
    </if>
  </select>


  <!--查询该用户在该模块下所拥有的菜单 -->
  <select id="queryModularPermissionsOfParrent" resultMap="BaseResultMap" >
    select  permission_id,permission_name
    from auth_saas_permission
    where 1=1
    <if test="parentId!=null">
      and parent_permission_id = #{parentId}
    </if>
    <if test="parentId!=null">
      and user_id = #{userId}
    </if>
  </select>

  <!--查询角色所拥有的菜单 -->
  <select id="queryPermissionsOfRoleId" resultMap="BaseResultMap" >
    select
    o.permission_id, o.parent_permission_id
    from  auth_saas_role_permission_ralation t INNER JOIN auth_saas_permission  o on
    t.permission_id = o.permission_id WHERE 1 = 1
    <if test="roleId!=null">
      and t.role_id = #{roleId}
    </if>
  </select>


  <!--添加权限并获取主键 -->
  <insert id="insertSelective" parameterType="com.sq.transportmanage.gateway.dao.entity.driverspark.SaasPermission"
          useGeneratedKeys="true"  keyProperty="permission_id">
    <selectKey resultType="java.lang.Integer" keyProperty="permissionId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into auth_saas_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        permission_id,
      </if>
      <if test="parentPermissionId != null" >
        parent_permission_id,
      </if>
      <if test="permissionCode != null" >
        permission_code,
      </if>
      <if test="permissionType != null" >
        permission_type,
      </if>
      <if test="permissionName != null" >
        permission_name,
      </if>
      <if test="menuUrl != null" >
        menu_url,
      </if>
      <if test="menuOpenMode != null" >
        menu_open_mode,
      </if>
      <if test="valid != null" >
        valid,
      </if>
      <if test="sortSeq != null" >
        sort_seq,
      </if>
      <if test="merchantId != null" >
        merchant_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="parentPermissionId != null" >
        #{parentPermissionId,jdbcType=INTEGER},
      </if>
      <if test="permissionCode != null" >
        #{permissionCode,jdbcType=VARCHAR},
      </if>
      <if test="permissionType != null" >
        #{permissionType,jdbcType=TINYINT},
      </if>
      <if test="permissionName != null" >
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="menuOpenMode != null" >
        #{menuOpenMode,jdbcType=TINYINT},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=BIT},
      </if>
      <if test="sortSeq != null" >
        #{sortSeq,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null" >
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>