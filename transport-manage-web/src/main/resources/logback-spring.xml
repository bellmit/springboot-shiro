<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <conversionRule conversionWord="ip" converterClass="com.sq.transportmanage.gateway.api.web.config.IPLogConfig" />
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <property name="appName" value="transport-manage-api"/>
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}%L - %msg%n" />
    <!--&lt;!&ndash;定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径&ndash;&gt;-->
    <property name="LOG_HOME" value="./log" />

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <!--<immediateFlush>false</immediateFlush>-->
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!--&lt;!&ndash; 按照每天生成日志文件 &ndash;&gt;-->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender" additivity="false">
        <file>${LOG_HOME}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/info.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件最大的大小-->
            <maxFileSize>1024MB</maxFileSize>
            <!--日志文件保留天数-->
            <maxHistory>10</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <!--<immediateFlush>false</immediateFlush>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss:SSS} [%thread] %-5level %logger{36} -%X{traceId} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender" additivity="false">
        <file>${LOG_HOME}/sq_error.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/sq_error.log.%d{yyyy-MM-dd}</FileNamePattern>
            <MaxHistory>10</MaxHistory>
        </rollingPolicy>
        <encoder>
            <!--<immediateFlush>false</immediateFlush>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%t] %c{3\}:%L %X{traceId} - %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="LOGSTASH_WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/warn.json</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/warn.json.%d{yyyy-MM-dd}.%i</FileNamePattern>
            <!--日志文件最大的大小-->
            <maxFileSize>1024MB</maxFileSize>
            <!--日志文件保留天数-->
            <maxHistory>7</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <!--<immediateFlush>false</immediateFlush>-->
            <jsonFactoryDecorator class="MyJsonFactoryDecorator" />
            <providers>
                <timestamp>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZZ</pattern>
                </timestamp>
                <pattern>
                    <pattern>
                        {
                        "traceId": "%X{traceId}",
                        "level": "%level",
                        "service": "${springAppName:-}",
                        "host": "%ip",
                        "thread": "%thread",
                        "class": "%logger{40}-%L",
                        "message": "%message"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <appender name="LOGSTASH_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/info.json</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/info.json.%d{yyyy-MM-dd}.%i</FileNamePattern>
            <!--日志文件最大的大小-->
            <maxFileSize>2024MB</maxFileSize>
            <!--日志文件保留天数-->
            <maxHistory>7</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <immediateFlush>false</immediateFlush>
            <jsonFactoryDecorator class="com.sq.transportmanage.gateway.api.web.config.MyJsonFactoryDecorator" />
            <providers>
                <timestamp>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZZ</pattern>
                </timestamp>
                <pattern>
                    <pattern>
                        {
                        "traceId": "%X{traceId}",
                        "level": "%level",
                        "service": "${springAppName:-}",
                        "host": "%ip",
                        "thread": "%thread",
                        "class": "%logger{40}-%L",
                        "message": "%message"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <appender name="LOGSTASH_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/sq_error.json</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/sq_error.json.%d{yyyy-MM-dd}.%i</FileNamePattern>
            <!--日志文件最大的大小-->
            <maxFileSize>1024MB</maxFileSize>
            <!--日志文件保留天数-->
            <maxHistory>15</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <jsonFactoryDecorator class="com.sq.transportmanage.gateway.api.web.config.MyJsonFactoryDecorator" />
            <providers>
                <timestamp>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZZ</pattern>
                </timestamp>
                <pattern>
                    <pattern>
                        {
                        "traceId": "%X{traceId}",
                        "level": "%level",
                        "service": "${appName:-}",
                        "host": "%ip",
                        "thread": "%thread",
                        "class": "%logger{40}",
                        "line": "%L",
                        "message": "%message",
                        "error":" %exception"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <appender name="okhttp_trace" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/okhttp-trace.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/okhttp-trace.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--<immediateFlush>false</immediateFlush>-->
            <pattern>{"createTime":"%d{yyyy-MM-dd HH:mm:ss.SSS}","appName":"${springAppName}","traceId":"%X{traceId}","payload":%message}%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <appender name="ASYNC_logback" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender ，每个异步日志打印仅支持一个appender-->
        <appender-ref ref="okhttp_trace"/>
    </appender>

    <appender name="third_log" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${LOG_HOME}/third.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/third.%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--<immediateFlush>false</immediateFlush>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss:SSS}|%message%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!--&lt;!&ndash;sql文件&ndash;&gt;-->
    <appender name="LOGSQL" class="ch.qos.logback.core.rolling.RollingFileAppender" additivity="false">
        <file>${LOG_HOME}/sql.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/sql.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件最大的大小-->
            <maxFileSize>1024MB</maxFileSize>
            <!--日志文件保留天数-->
            <maxHistory>10</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <!--<immediateFlush>false</immediateFlush>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss:SSS} [%thread] %-5level %logger{36} -%X{traceId} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <logger name="com.sq.transportmanage.gateway.service" level="INFO" additivity="false">
        <appender-ref ref="third_log"/>
    </logger>

    <logger name="com.zhuanche.http" level="INFO" additivity="false">
        <appender-ref ref="ASYNC_logback"/>
    </logger>

    <logger name="com.sq.transportmanage.gateway.dao" level="DEBUG" additivity="false">
        <appender-ref ref="LOGSQL" />
    </logger>

    <logger name="com.sq" level="INFO" addtivity="false">
        <appender-ref ref="LOGSTASH_INFO"/>
        <appender-ref ref="LOGSTASH_WARN"/>
        <appender-ref ref="LOGSTASH_ERROR"/>
        <appender-ref ref="ERROR"/>
    </logger>

    <logger name="org.springframework" level="INFO" addtivity="false">
        <appender-ref ref="ERROR"/>
    </logger>

    <!--默认开启控制台-->
    <springProfile name="dev">
        <root level="INFO" name="com.sq">
            <appender-ref ref="FILE"/>
            <appender-ref ref="STDOUT"/>
        </root>
    </springProfile>

    <springProfile name="test">
        <root level="INFO" name="com.sq">
            <appender-ref ref="FILE"/>
            <appender-ref ref="STDOUT"/>
        </root>
    </springProfile>

    <springProfile name="pre">
        <root level="INFO" additivity="false">
            <appender-ref ref="FILE"/>
        </root>
    </springProfile>

    <springProfile name="online">
        <root level="INFO" additivity="false">
            <appender-ref ref="FILE"/>
        </root>
    </springProfile>
    <root level="INFO" addtivity="false">
        <appender-ref ref="STDOUT"/>
    </root>


</configuration>